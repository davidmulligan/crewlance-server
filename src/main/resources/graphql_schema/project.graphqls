extend type Query {
    findAllProjects: [Project!]
}

extend type Mutation {
    createProject(title: String!, description: String!, location: String!, start: DateTime!, end: DateTime!): Project!
    updateProject(id: ID!, title: String, description: String, location: String, start: DateTime, end: DateTime): Project!
    deleteProject(id: ID!): String!
    addKeywordToProject(id: ID!, keyword: String!, notes: String) : Project!
    scheduleProject(id: ID!): Project
}

type Project {
    id: ID!
    title: String!
    description: String!
    location: String!
    start: DateTime!
    end: DateTime!
    status: ProjectStatus!
    keywords: [ProjectKeyword!]
    allocations: [Allocation!]
}

type ProjectKeyword {
    id: ID!
    value: String!
    notes: String
}

type Allocation {
    id: ID!
    start: DateTime!
    end: DateTime!
    strength: Int!
    user: User!
}

enum ProjectStatus {
    NEW
    OPEN
    CLOSED
    CANCELLED
}